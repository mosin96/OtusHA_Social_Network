# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InlineResponse500(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message=None, request_id=None, code=None):  # noqa: E501
        """InlineResponse500 - a model defined in OpenAPI

        :param message: The message of this InlineResponse500.  # noqa: E501
        :type message: str
        :param request_id: The request_id of this InlineResponse500.  # noqa: E501
        :type request_id: str
        :param code: The code of this InlineResponse500.  # noqa: E501
        :type code: int
        """
        self.openapi_types = {
            'message': str,
            'request_id': str,
            'code': int
        }

        self.attribute_map = {
            'message': 'message',
            'request_id': 'request_id',
            'code': 'code'
        }

        self._message = message
        self._request_id = request_id
        self._code = code

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_500 of this InlineResponse500.  # noqa: E501
        :rtype: InlineResponse500
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this InlineResponse500.

        Описание ошибки  # noqa: E501

        :return: The message of this InlineResponse500.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InlineResponse500.

        Описание ошибки  # noqa: E501

        :param message: The message of this InlineResponse500.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def request_id(self):
        """Gets the request_id of this InlineResponse500.

        Идентификатор запроса. Предназначен для более быстрого поиска проблем.  # noqa: E501

        :return: The request_id of this InlineResponse500.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this InlineResponse500.

        Идентификатор запроса. Предназначен для более быстрого поиска проблем.  # noqa: E501

        :param request_id: The request_id of this InlineResponse500.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def code(self):
        """Gets the code of this InlineResponse500.

        Код ошибки. Предназначен для классификации проблем и более быстрого решения проблем.  # noqa: E501

        :return: The code of this InlineResponse500.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this InlineResponse500.

        Код ошибки. Предназначен для классификации проблем и более быстрого решения проблем.  # noqa: E501

        :param code: The code of this InlineResponse500.
        :type code: int
        """

        self._code = code
